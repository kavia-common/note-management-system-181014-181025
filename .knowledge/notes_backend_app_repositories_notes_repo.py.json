{"is_source_file": true, "format": "Python", "description": "This is a Python source file implementing an in-memory repository for managing notes, including CRUD operations and data transformations, for a note-taking application.", "external_files": ["app/models/schemas.py"], "external_methods": ["NoteCreate", "NoteUpdate", "NoteOut"], "published": ["repo", "to_note_out"], "classes": [{"name": "NoteEntity", "description": "Internal representation of a Note in the repository, including id, title, content, created_at, and updated_at."}, {"name": "NotesRepository", "description": "Thread-safe in-memory repository class providing CRUD operations for notes."}], "methods": [{"name": "List[NoteEntity] list_notes(self)", "description": "Returns all notes in insertion order.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "NoteEntity create_note(self, payload: NoteCreate)", "description": "Creates a new note from a NoteCreate payload and stores it in memory.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "Optional[NoteEntity] get_note(self, note_id: UUID)", "description": "Retrieves a note by its UUID.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "Optional[NoteEntity] update_note(self, note_id: UUID, payload: NoteUpdate)", "description": "Updates fields of a note if it exists, based on a NoteUpdate payload.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "bool delete_note(self, note_id: UUID)", "description": "Deletes a note by its UUID, returns True if the note existed.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "None __init__(self)", "scope": "NotesRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "NoteOut to_note_out(entity: NoteEntity)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["datetime.now", "uuid4", "self._lock.acquire", "self._lock.release", "self._store.get", "self._store.pop", "NoteOut"], "search-terms": ["NotesRepository", "to_note_out", "NoteEntity", "in-memory notes"], "state": 2, "file_id": 8, "knowledge_revision": 27, "git_revision": "d22b41a1c8bb358aebf03dcdd808eb80b39a1d90", "revision_history": [{"17": ""}, {"27": "d22b41a1c8bb358aebf03dcdd808eb80b39a1d90"}], "ctags": [{"_type": "tag", "name": "NoteEntity", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^class NoteEntity:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NotesRepository", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^class NotesRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^    def create_note(self, payload: NoteCreate) -> NoteEntity:$/", "language": "Python", "typeref": "typename:NoteEntity", "kind": "member", "signature": "(self, payload: NoteCreate)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^    def delete_note(self, note_id: UUID) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, note_id: UUID)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^    def get_note(self, note_id: UUID) -> Optional[NoteEntity]:$/", "language": "Python", "typeref": "typename:Optional[NoteEntity]", "kind": "member", "signature": "(self, note_id: UUID)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^    def list_notes(self) -> List[NoteEntity]:$/", "language": "Python", "typeref": "typename:List[NoteEntity]", "kind": "member", "signature": "(self)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "repo", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^repo = NotesRepository()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "to_note_out", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^def to_note_out(entity: NoteEntity) -> NoteOut:$/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "(entity: NoteEntity)"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^    def update_note(self, note_id: UUID, payload: NoteUpdate) -> Optional[NoteEntity]:$/", "language": "Python", "typeref": "typename:Optional[NoteEntity]", "kind": "member", "signature": "(self, note_id: UUID, payload: NoteUpdate)", "scope": "NotesRepository", "scopeKind": "class"}], "hash": "9c2618920e5058a3e45ff3a374b6567c", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/app/repositories/notes_repo.py", "fields": [{"name": "repo = NotesRepository()", "scope": "", "scopeKind": "", "description": "unavailable"}]}