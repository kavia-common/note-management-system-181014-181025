{"is_source_file": true, "format": "Python", "description": "This file implements an in-memory repository for managing notes, providing CRUD operations and data transformations for note objects.", "external_files": ["app.models.schemas"], "external_methods": ["uuid4()", "datetime.now", "datetime.now(timezone.utc)"], "published": ["repo", "to_note_out"], "classes": [{"name": "NoteEntity", "description": "Internal representation of a Note in the repository."}, {"name": "NotesRepository", "description": "Thread-safe in-memory notes repository with CRUD operations."}], "methods": [{"name": "List[NoteEntity] list_notes(self)", "description": "Return all notes in insertion order.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "NoteEntity create_note(self, payload: NoteCreate)", "description": "Create a note and persist it in memory.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "Optional[NoteEntity] get_note(self, note_id: UUID)", "description": "Get a single note by its ID.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "Optional[NoteEntity] update_note(self, note_id: UUID, payload: NoteUpdate)", "description": "Update fields of a note if it exists.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "bool delete_note(self, note_id: UUID)", "description": "Delete a note by ID. Returns True if it existed.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "NoteOut to_note_out(entity: NoteEntity)", "description": "Transform a NoteEntity to the public NoteOut schema.", "scope": "", "scopeKind": ""}, {"name": "None __init__(self)", "scope": "NotesRepository", "scopeKind": "class", "description": "unavailable"}], "calls": ["uuid4()", "datetime.now(timezone.utc)", "self._lock.acquire()", "self._lock.release()"], "search-terms": ["NotesRepository", "NoteEntity", "in-memory notes management", "CRUD operations for notes"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "", "ctags": [{"_type": "tag", "name": "NoteEntity", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^class NoteEntity:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NotesRepository", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^class NotesRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^    def create_note(self, payload: NoteCreate) -> NoteEntity:$/", "language": "Python", "typeref": "typename:NoteEntity", "kind": "member", "signature": "(self, payload: NoteCreate)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^    def delete_note(self, note_id: UUID) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, note_id: UUID)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^    def get_note(self, note_id: UUID) -> Optional[NoteEntity]:$/", "language": "Python", "typeref": "typename:Optional[NoteEntity]", "kind": "member", "signature": "(self, note_id: UUID)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^    def list_notes(self) -> List[NoteEntity]:$/", "language": "Python", "typeref": "typename:List[NoteEntity]", "kind": "member", "signature": "(self)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "repo", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^repo = NotesRepository()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "to_note_out", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^def to_note_out(entity: NoteEntity) -> NoteOut:$/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "(entity: NoteEntity)"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-management-system-181014-181025/notes_backend/app/repositories/notes_repo.py", "pattern": "/^    def update_note(self, note_id: UUID, payload: NoteUpdate) -> Optional[NoteEntity]:$/", "language": "Python", "typeref": "typename:Optional[NoteEntity]", "kind": "member", "signature": "(self, note_id: UUID, payload: NoteUpdate)", "scope": "NotesRepository", "scopeKind": "class"}], "hash": "b292e92ac2040c9abbcc3463695e2d27", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/app/repositories/notes_repo.py", "fields": [{"name": "repo = NotesRepository()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"17": ""}]}